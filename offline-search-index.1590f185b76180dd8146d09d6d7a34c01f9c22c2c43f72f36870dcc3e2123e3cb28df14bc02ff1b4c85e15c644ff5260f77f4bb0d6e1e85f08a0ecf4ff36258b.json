[{"body":"Driver Installation Installation scripts for all the drivers can be fetched using the links of the driver\n","excerpt":"Driver Installation Installation scripts for all the drivers can be fetched using the links of the …","ref":"/hugo1/docs/getting-started/","title":"Installation"},{"body":"","excerpt":"","ref":"/hugo1/docs/product-details/","title":"Product Description"},{"body":"CSI-PowerScale Upgrade CSI Driver for DELL EMC PowerScale from previous versions The CSI Driver for Dell EMC PowerScale prior to v1.2.0 supports only Helm 2. Users can upgrade the driver using Helm 2 or Helm 3. Use one of the following two approaches to upgrade the CSI Driver for Dell EMC PowerScale:\n Upgrade CSI Driver for Dell EMC PowerScale v1.1.0 to v1.2.0 using Helm 2 Migrate from Helm 2 to Helm 3  Upgrade CSI Driver for Dell EMC PowerScale v1.1.0 to v1.2.0 using Helm 2   Get the latest code from github.com/dell/csi-isilon (v1.2.0)\n  Uninstall the existing v1.1.0 driver using uninstall.sh under csi-isilon/helm\n  Prepare myvalues.yaml\n  Run the ./install.sh command to upgrade the driver\n  List the pods with the following command (to verify the status)\nkubectl get pods -n isilon\n  Migrating from Helm 2 to Helm 3 (applicable for CSI Driver for Dell EMC PowerScale v1.2.0 or higher)   Get the latest code from github.com/dell/csi-isilon by executing the following command.\ngit clone -b \u0026lt;VERSION\u0026gt; https://github.com/dell/csi-isilon.git where  is the version of CSI Driver for Dell EMC PowerScale\n  Uninstall the CSI Driver for Dell EMC PowerScale using the uninstall.sh script under csi-isilon/helm using Helm 2.\n  Go to https://helm.sh/docs/topics/v2_v3_migration/ and follow the instructions to migrate from Helm 2 to Helm 3.\n  Once Helm 3 is ready, install the CSI Driver for Dell EMC PowerScale using install.sh script under csi-isilon/helm.\n  List the pods with the following command (to verify the status)\nkubectl get pods -n isilon\n  CSI-Unity Upgrade CSI Driver for Unity Preparing myvalues.yaml is the same as explained above.\nTo upgrade the driver from csi-unity v1.2.1 in k8s 1.16 to csi-unity 1.3 in k8s 1.17:\n Remove all volume snapshots, volume snapshot content and volume snapshot class objects. Upgrade the Kubernetes version to 1.17 first before upgrading CSI driver. Uninstall existing driver. Uninstall alpha snapshot CRDs. Verify all pre-reqs to install csi-unity v1.3 are fulfilled. Install the driver using installation steps from here  Note: User has to re-create existing custom-storage classes (if any) according to latest (v1.3) format.\n","excerpt":"CSI-PowerScale Upgrade CSI Driver for DELL EMC PowerScale from previous versions The CSI Driver for …","ref":"/hugo1/docs/upgradation/","title":"Upgradation"},{"body":"Installation scripts and README.md files The scripts and documentation are located within the installer directory. These scripts are designed to be placed within the CSI Driver repos in a directory called /dell-csi-helm-installer and require the driver helm chart to be located within the /helm directory of the same repo.\nCopying the scripts to target driver repos A helper script is available that will copy the common installer scripts and docuemtnation to each driver. This script can be found at util/update-driver.sh and will perform the following steps for each driver:\n Clone the driver repo Either checkout or create a branch for the changes to be applied to. If the user supplied branch name exists, it will be used. If it does not exist, one will be created. Copy the common installer scripts to the target branch Copy the documentation to the target branch. While copying, it will substitute: The driver arrays formal name (PowerMax, PowerFlex, PowerStore, PowerScale, Unity) for any text matching __PROPERPRODUCTNAME__ The driver arrays informal name, always in lower case (powermax, vxflexos, powerstore, isilon, unity) for text matching __LOWERPRODUCTNAME__ After each file is copied, a git diff will be performed so the user can inspect the changes and validate them Once all files are copied, the files will be added to a git commit with a commit message that has been supplied by the user. At this stage, if there are any changes, the user will be prompted if they would like to git push the changes to the git remote If the git push is successful, the script can automatically create a PR in the target repository, if one does not exist. If the user elects to not create a PR, one can be created manually.  A video demonstrating the use of the util/update-driver.sh script has been made, It can be accessed (Passcode: ftju8Np*) at https://Dell.zoom.us/rec/share/qAOiNw3PSy1TtHBuzI9R6hN3W1PfZr_w8rKVk5X8Zg1axQqjYNYKG89mabbIkeef.9pLpkZfdJ3kEGKq4\nThis script will create a temporary working directory that must be manually cleaned up. The location of this directory will be displayed at the end of the script.\nHelp is available for this script\n[dell-csi-helm-installer]# update-driver.sh -h Help for update-driver.sh This script will copy the Common Helm Installer scripts to a branch within each driver and push them to the remote Usage: update-driver.sh options... --directory[=]\u0026lt;directory\u0026gt; Directory to copy files from. Default is \u0026quot;/dell/git/dell-csi-helm-installer/installer\u0026quot; --branch[=]\u0026lt;branch\u0026gt; Branch to copy to. This branch will be created if it does not exist at the remote. Default is \u0026quot;feature/update-common-installer-scripts\u0026quot; --commit[=]\u0026lt;commit message\u0026gt; Git commit message. Default is \u0026quot;Addressing installation review comments across all drivers\u0026quot; --assume-yes Assume 'yes' for any questions. Default is not to assume this. -h Help ","excerpt":"Installation scripts and README.md files The scripts and documentation are located within the …","ref":"/hugo1/docs/getting-started/helm/","title":"Installation using Common helm Installer"},{"body":"Description dell-csi-operator is a Kubernetes operator which can be used to install and manage various CSI Drivers provided by Dell EMC for different storage arrays.\nIt is built, deployed and tested using the toolset provided by Operator framework which include:\n operator-sdk operator-lifecycle-manager operator-registry  Note - operator-sdk-vv1.18.2-x86_64-linux-gnu has been used to build the dell-csi-operator and is available at the root of the repository\nCustom Resource Definitions dell-csi-operator manages a set of Custom Resource Definitions (CRDs)\nThese CRDs represent a specific CSI Driver installation and are part of the API group storage.dell.com\nThe current set of CRDs managed by the dell-csi-operator are:\n CSIUnity CSIIsilon CSIVXFlexOS CSIPowerStore CSIPowerMax CSIPowerMaxRevProxy  Controllers dell-csi-operator utilizes Kubernetes controller runtime libraries for building controllers which run as part of the Operator deployment.\nThese controllers watch for any requests to create/modify/delete instances of the Custom Resource Definitions (CRDs) and handle the reconciliation of these requests.\nEach instance of a CRD is called a Custom Resource (CR) and can be managed by a client like kubectl in the same way a native Kubernetes resource is managed.\nWhen you create a Custom Resource, then the corresponding Controller will create the Kubernetes objects required for the driver installation.\nThis includes:\n Service Accounts and RBAC configuration StatefulSet DaemonSet Deployment and Service (only for CSIPowerMaxRevProxy)  Note - There is one controller per Custom Resource type and each controller runs a single worker\nBuild and Deploy Pre-requisites Make sure you are running the build on a machine with go 1.13.x installed\nThere are multiple Makefile targets available for building the Operator\nBuilding Operator binary If you wish to build the Operator binary, run the command - make go-build\nBuild Operator image There are a few available Makefile targets which let you build a docker image for the Operator. The docker image is built using the operator-sdk binary (which is available in the repository). The base image used to build the docker image is UBI (Universal Base Image) provided by Red Hat.\nRun the command make docker-local to make a docker image for the operator which will be tagged with the current logged in user and a timestamp. This option is useful for multiple developers using the same testing environment\nRun the command make docker to build a docker image for the Operator which will be tagged with git semantic versioning\nThe official builds of Operator which are hosted on artifactory are built using the make docker command\nBy default, this target will tag the newly built images with the artifactory repo\nRun the command REGISTRY=my-image-repo/dell-csi-operator make docker to tag the docker image with your own repository\nPush docker image to private repository Run the command REGISTRY=my-image-repo/dell-csi-operator make docker-push to build and push the docker image to my-image-repo private repository\nPush docker image to artifactory Run the command make docker-push to build and push the docker image to the artifactory repository for Operator\nNote - Don\u0026rsquo;t use this option unless you really wish to push the image to artifactory as it may end up overwriting official builds\nRun the Operator locally without deploying any image Pre-requisites Make sure that a KubeConfig file pointing to your Kubernetes/OpenShift cluster is present in the default location\nRun either of the following commands to run the Operator in your cluster without creating a deployment\n make go-run ./operator-sdk run local  Note - Make sure to install the CRDs managed by the Operator before running it locally\nThe above command will run the Operator binary which will be equivalent to installing the operator in the default namespace\nDeploy the operator There are primarily two ways of deploying the Operator -\n Use Operator manifests and installation scripts Use OLM to install the Operator\nDuring development -\na) Use internal Operator Catalog hosted on artifactory\nb) Use OperatorHub to deploy publicly available Operator  Deploy Operator without OLM   Update the docker image in the file deploy/operator.yaml to the one you wish to install\nThis could be an image from artifactory, an image which you built or any public image on dockerhub\n  Run the command bash scripts/install.sh to deploy the Operator in the default namespace\n  The installation script does the following:\n Create a Service Account and setup the RBAC using ClusterRole and ClusterRoleBindings Create a ConfigMap which is used by the Operator Install the various CRDs managed by the Operator Create the Operator deployment (single replica)  Deploy Operator using OLM Pre-requisites OLM is not available on upstream Kubernetes cluster by default and has to be installed before installing the Operator.\nRun the command ./operator-sdk olm install to install OLM in your cluster\nNote - OLM is available as a default component in OpenShift clusters and you don\u0026rsquo;t need to install it separately\nNote - Please refer Operator SDK documentation for more help on using operator-sdk\nDeploy Operator using internal Catalog Run the command bash scripts/install_olm.sh to install the Operator using OLM in an upstream Kubernetes cluster Run the command bash scripts/install_olm.sh --openshift to install the Operator using OLM in an OpenShift cluster\nThe above scripts will create instances of the following CRDs:\n CatalogSource OperatorGroup Subscription InstallPlan ClusterServiceVersion  You can query the status of these objects in the test-olm namespace to get more information or troubleshoot any issues found during installation.\nVerify Installation Post a successful installation of the Operator, there should be an Operator deployment created in the cluster.\nDepending on the method of installation, this would be created in the namespace:\n Installation without OLM - default Installation with OLM - test-olm  Query for CRDs You can also query for the CRDs installed in the cluster by running the command kubectl get crd. You should see the following CRDs in the list of CRDs installed in the cluster:\n csiisilons.storage.dell.com csipowermaxes.storage.dell.com csipowermaxrevproxies.storage.dell.com csipowerstores.storage.dell.com csiunities.storage.dell.com csivxflexoses.storage.dell.com  Install a CSI driver Once the CRDs and Operator has been installed in the cluster, you can install any CSI driver by creating a Custom Resource (CR)\nFor e.g. - If you want to install the CSI PowerMax driver, you should create a CR of the Kind CSIPowerMax\nHere are the steps involved in installing a driver:\n Make sure all dependencies for the driver have been met. This can include installation of specific packages, configuration of services, nodes Create the namespace where you wish to install the driver Create any mandatory and optional secrets required for the driver installation Create the Custom Resource using the sample manifests provided for the driver  Create custom resource A lot of sample manifest files have been provided in the deploy/crd folder to help with the installation of various CSI Drivers They follow the naming convention\n{driver name}_{driver version}_k8s_{k8 version}.yaml  Or\n{driver name}_{driver version}_ops_{OpenShift version}.yaml  Use the correct sample manifest based on the driver, driver version and Kubernetes/OpenShift version\nFor e.g.\npowermax_v140_k8s_117.yaml \u0026lt;- To install CSI PowerMax driver v1.4.0 on a Kubernetes 1.17 cluster powermax_v140_ops_43.yaml \u0026lt;- To install CSI PowerMax driver v1.4.0 on an OpenShift 4.3 cluster\nNote - For this example, we will assume that the Custom Resource will be created in the namespace powermax with the name powermax\nCreate a new file powermax.yaml by copying the relevant sample file and edit the contents (specific to your installation).\nRun the command kubectl create -f powermax.yaml to create the Custom Resource (CR)\nCheck the status of the Custom Resource by running the command kubectl get csipowermax -n powermax\nIf the status of the CR shows Running then the driver installation completed successfully with all driver pods running\nIf the status of the CR shows Succeeded then the driver installation succeeded but all driver pods are not up and running\nIf the status of the CR shows InvalidConfig then there is an incorrect value specified in the Custom Resource manifest\nNote - The driver status can take some time to migrate from Succeeded to Running because of the time taken for the driver pods to completely start up.\nIn case some pods are not up and running, the Operator will query for their status for at least an hour before giving up on updating the status of the Custom Resource.\nYou can also check the status of the driver pods by running the command kubectl get pods -n powermax\nNote - Run the command kubectl get csipowermax --all-namespaces to query for all Custom Resources of the type CSIPowerMax in your cluster\nUpdate Custom Resource If you want to update the driver installation or fix any issues in the Custom Resource (for e.g. - InValidConfig), then you can update the Custom Resource\nThis can be done in multiple ways\n Run the command kubectl edit csipowermax powermax -n powermax and edit any desired field(s) Update the manifest file and run the command kubectl apply -f powermax.yaml Directly patch the Custom Resource (refer Kubernetes documentation)  Once the update has been applied to the Custom Resource, the Operator will try to reconcile the desired state with the observed state in the cluster and apply required changes (if any) to the various resources part of the driver installation\nDelete Custom Resource Run the command kubectl delete -f powermax.yaml to delete the Custom Resource. This will delete the Custom Resource and delete all the driver pods.\n","excerpt":"Description dell-csi-operator is a Kubernetes operator which can be used to install and manage …","ref":"/hugo1/docs/getting-started/operator/","title":"Installation using Operator"},{"body":"","excerpt":"","ref":"/hugo1/docs/getting-started/driver/","title":"Installation process of specific driver"},{"body":"CSI Documentation Welcome to the Dell Technologies CSI Documentation pages! You can choose any driver you want to know about.\nDell storage family is made up of the following drivers\n   Driver          Product Details PowerScale Unity PowerStore VxFlexOS PowerMax   Driver Installation PowerScale Unity PowerStore VxFlexOS PowerMax   Driver Upgrade PowerScale Unity PowerStore VxFlexOS PowerMax   Latest version v1.3 v1.3 v1.1 v1.2 -   Older Versions v1.2 v1.1 [v1.0] v1.2 v1.1 [v1.0] [v1.0] [v1.1] [v1.0] -    ","excerpt":"CSI Documentation Welcome to the Dell Technologies CSI Documentation pages! You can choose any …","ref":"/hugo1/docs/","title":"Documentation"},{"body":"","excerpt":"","ref":"/hugo1/blog/news/","title":"News About Docsy"},{"body":"","excerpt":"","ref":"/hugo1/blog/releases/","title":"New Releases"},{"body":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.\nIncluding images Here\u0026rsquo;s an image (featured-sunset-get.png) that includes a byline and a caption.\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The front matter of this post specifies properties to be assigned to all image resources:\nresources: - src: \u0026quot;**.{png,jpg}\u0026quot; title: \u0026quot;Image #:counter\u0026quot; params: byline: \u0026quot;Photo: Riona MacNamara / CC-BY-CA\u0026quot; To include the image in a page, specify its details like this:\n Fetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\n  The image will be rendered at the size and byline specified in the front matter.\n","excerpt":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog …","ref":"/hugo1/blog/2018/10/06/easy-documentation-with-docsy/","title":"Easy documentation with Docsy"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There\u0026rsquo;s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid \u0026lsquo;N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a \u0026ldquo;mixed\u0026rdquo; task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin\u0026rsquo; Somethin\u0026rsquo;, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let\u0026rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I\u0026rsquo;m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026amp; Stealin, The New Style, She\u0026rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \u0026quot;bar\u0026quot;; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \u0026quot;bar\u0026quot;; bar := \u0026quot;foo\u0026quot;; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \u0026#34;bar\u0026#34;;` lexer := lexers.Get(\u0026#34;javascript\u0026#34;) iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\u0026#34;github\u0026#34;) formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026amp;buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \u0026quot;bar\u0026quot;;   Ruby foo = \u0026quot;bar\u0026quot;{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","excerpt":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered …","ref":"/hugo1/blog/2018/10/06/the-second-blog-post/","title":"The second blog post"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Header 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There\u0026rsquo;s a horizontal rule above and below this.\n Here is an unordered list:\n Salt-n-Pepa Bel Biv DeVoe Kid \u0026lsquo;N Play  And an ordered list:\n Michael Jackson Michael Bolton Michael Bublé  And an unordered task list:\n Create a sample markdown document Add task lists to it Take a vacation  And a \u0026ldquo;mixed\u0026rdquo; task list:\n Steal underpants ? Profit!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition terms are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin\u0026rsquo; Somethin\u0026rsquo;, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let\u0026rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I\u0026rsquo;m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026amp; Stealin, The New Style, She\u0026rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \u0026quot;bar\u0026quot;; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \u0026quot;bar\u0026quot;; bar := \u0026quot;foo\u0026quot;; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \u0026#34;bar\u0026#34;;` lexer := lexers.Get(\u0026#34;javascript\u0026#34;) iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\u0026#34;github\u0026#34;) formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026amp;buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \u0026quot;bar\u0026quot;;   Ruby foo = \u0026quot;bar\u0026quot;{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts  This is an alert.  Note: This is an alert with a title.  This is a successful alert.  This is a warning!  Warning! This is a warning with a title!  Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","excerpt":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered …","ref":"/hugo1/blog/2018/01/04/another-great-release/","title":"Another Great Release"},{"body":"Introduction A Container Storage Interface (CSI) Driver for Kubernetes. The HPE CSI Driver for Kubernetes allows you to use a Container Storage Provider (CSP) to perform data management operations on storage resources. The architecture of the CSI driver allows block storage vendors to implement a CSP that follows the specification (a browser friendly version).\nThe CSI driver architecture allows a complete separation of concerns between upstream Kubernetes core, SIG Storage (CSI owners), CSI driver author (HPE) and the backend CSP developer.\n!!! tip The HPE CSI Driver for Kubernetes is vendor agnostic. Any entity may leverage the driver and provide their own Container Storage Provider.\nTable of Contents [TOC]\nFeatures and capabilities CSI gradually mature features and capabilities in the specification at the pace of the community. HPE keep a close watch on differentiating features the primary storage family of products may be suitable for implementing in CSI and Kubernetes. HPE experiment early and often. That\u0026rsquo;s why it\u0026rsquo;s sometimes possible to observe a certain feature being available in the CSI driver although it hasn\u0026rsquo;t been announced or isn\u0026rsquo;t documented.\nBelow is the official table for CSI features we track and deem readily available for use after we\u0026rsquo;ve officially tested and validated it in the platform matrix.\n   Feature K8s maturity Since K8s version HPE CSI Driver     Dynamic Provisioning GA 1.13 1.0.0   Raw Block Volume GA 1.18 1.2.0   Volume Expansion Beta 1.16 1.1.0   PVC Data Source GA 1.18 1.1.0   Inline Ephemeral Volumes Beta 1.16 1.2.0   Volume Snapshots Beta 1.17 1.1.0   Volume Limits GA 1.17 1.2.0   Volume Mutator1 N/A N/A 1.3.0   Generic Ephemeral Volumes Alpha 1.19 1.3.0   Topology GA 1.17 Future    1 = HPE CSI Driver for Kubernetes specific feature. CSP support may vary.\nDepending on the CSP, it may support a number of different snapshotting, cloning and restoring operations by taking advantage of StorageClass parameter overloading. Please see the respective CSP for additional functionality.\nRefer to the official table of feature gates in the Kubernetes docs to find availability of beta and alpha features. HPE provide limited support on non-GA CSI features. Please file any issues, questions or feature requests here. You may also join our Slack community to chat with HPE folks close to this project. We hang out in #NimbleStorage, #3par-primera and #Kubernetes, sign up at slack.hpedev.io and login at hpedev.slack.com.\n!!! tip Familiarize yourself with the basic requirements below for running the CSI driver on your Kubernetes cluster. It\u0026rsquo;s then highly recommended to continue installing the CSI driver with either a Helm chart or an Operator.\nCompatibility and support These are the combinations HPE has tested and can provide official support services around for each of the CSI driver releases. Each Container Storage Provider has it\u0026rsquo;s own requirements in terms of storage platform OS and may have other constraints not listed here.\n!!! note For Kubernetes 1.12 and earlier please see legacy FlexVolume drivers.\nHPE CSI Driver for Kubernetes 1.3.0 Release highlights:\n Kubernetes CSI Sidecar: Volume Mutator Broader ecosystem support Native iSCSI CHAP configuration    Kubernetes 1.15-1.181   Worker OS CentOS 7.6, RHEL 7.6, RHCOS 4.3-4.4, Ubuntu 18.04, Ubuntu 20.04   Data protocol Fibre Channel, iSCSI    Platforms  NimbleOS 5.0.10.x, 5.1.4.200-x, 5.2.1.x, 5.3.0.x\n3PAR OS 3.3.1 Primera OS 4.0.0, 4.1.0, 4.2.02   Release notes v1.3.0 on GitHub   Blogs  Around The Storage Block (release) HPE DEV (Remote copy peer persistence tutorial) HPE DEV (Introducing the volume mutator)    1 = For HPE Ezmeral Container Platform and Rancher; Kubernetes clusters must be deployed within the currently supported range of \"Worker OS\" platforms listed in the above table. See [partner ecosystems](../partners) for other variations.\n2 = Only FC is supported on Primera OS prior to 4.2.0.  HPE CSI Driver for Kubernetes 1.2.0 Release highlights: Support for raw block volumes and inline ephemeral volumes. NFS Server Provisioner in Tech Preview (beta).\n  Kubernetes 1.14-1.18   Worker OS CentOS 7.6, RHEL 7.6, RHCOS 4.2-4.3, Ubuntu 16.04, Ubuntu 18.04   Data protocol Fibre Channel, iSCSI    Platforms  NimbleOS 5.0.10.x, 5.1.3.1000-x, 5.1.4.200-x, 5.2.1.x\n3PAR OS 3.3.1 Primera OS 4.0.0, 4.1.0 (FC only)   Release notes v1.2.0 on GitHub   Blogs Around The Storage Block (release) HPE DEV (tutorial for raw block and inline volumes) Around The Storage Block (NFS Server Provisioner) HPE DEV (tutorial for NFS)   HPE CSI Driver for Kubernetes 1.1.1 Release highlights: Support for HPE 3PAR and Primera Container Storage Provider.\n  Kubernetes 1.13-1.17   Worker OS CentOS 7.6, RHEL 7.6, RHCOS 4.2-4.3, Ubuntu 16.04, Ubuntu 18.04   Data protocol Fibre Channel, iSCSI    Platforms  NimbleOS 5.0.8.x, 5.1.3.x, 5.1.4.x 3PAR OS 3.3.1 Primera OS 4.0.0, 4.1.0 (FC only)   Release notes N/A   Blogs HPE Storage Tech Insiders (release), HPE DEV (tutorial for \"primera3par\" CSP)  Release archive HPE currently supports up to three minor releases of the HPE CSI Driver for Kubernetes.\n Unsupported releases  Known limitations  Always check with the Kubernetes vendor distribution which CSI features are available for use and supported by the vendor.  iSCSI CHAP considerations If iSCSI CHAP is being used in the environment, consider the following.\nCSI driver 1.2.1 and below In version 1.2.1 and below, the CSI driver did not support CHAP natively. CHAP must be enabled manually on the worker nodes before deploying the CSI driver on the cluster. This also needs to be applied to new worker nodes before they join the cluster.\nCSI driver 1.3.0 and above CHAP is now an optional part of the initial deployment of the driver with parameters passed to Helm or the Operator. For object definitions, the CHAP_USER and CHAP_PASSWORD needs to be supplied to the csi-node-driver. The CHAP username and secret is picked up in the hpenodeinfo Custom Resource Definition (CRD). The CSP is under contract to create the user if it doesn\u0026rsquo;t exist on the backend.\nCHAP is a good measure to prevent unauthorized access to iSCSI targets, it does not encrypt data on the wire. CHAP secrets should be at least twelve charcters in length.\nKubernetes feature gates Different features mature at different rates. Refer to the official table of feature gates in the Kubernetes docs.\nThe following guidelines appliy to which feature gates got introduced as alphas for the corresponding version of Kubernetes. For example, ExpandCSIVolumes got introduced in 1.14 but is still an alpha in 1.15, hence you need to enable that feature gate in 1.15 as well if you want to use it.\nKubernetes 1.13  --allow-privileged flag must be set to true for the API server  Kubernetes 1.14  --allow-privileged flag must be set to true for the API server --feature-gates=ExpandCSIVolumes=true,ExpandInUsePersistentVolumes=true feature gate flags must be set to true for both the API server and kubelet for resize support  Kubernetes 1.15  --allow-privileged flag must be set to true for the API server --feature-gates=ExpandCSIVolumes=true,ExpandInUsePersistentVolumes=true feature gate flags must be set to true for both the API server and kubelet for resize support --feature-gates=CSIInlineVolume=true feature gate flag must be set to true for both the API server and kubelet for pod inline volumes (Ephemeral Local Volumes) support --feature-gates=VolumePVCDataSource=true feature gate flag must be set to true for both the API server and kubelet for Volume cloning support  Kubernetes 1.19  --feature-gates=GenericEphemeralVolume=true feature gate flags needs to be passed to api-server, scheduler, controller-manager and kubelet to enable Generic Ephemeral Volumes  ","excerpt":"Introduction A Container Storage Interface (CSI) Driver for Kubernetes. The HPE CSI Driver for …","ref":"/hugo1/docs/dell-csi-driver/hpe_driver/","title":""},{"body":"  #td-cover-block-0 { background-image: url(/hugo1/about/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/hugo1/about/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About Goldydocs A sample site using the Docsy Hugo theme.        Goldydocs is a sample site using the Docsy Hugo theme that shows what it can do and provides you with a template site structure. It’s designed for you to clone and edit as much as you like. See the different sections of the documentation and site for more ideas.     This is another section      This is another section     ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/hugo1/about/","title":"About Goldydocs"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","excerpt":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will …","ref":"/hugo1/blog/","title":"Docsy Blog"},{"body":"","excerpt":"","ref":"/hugo1/docs/samples/","title":"Code Samples"},{"body":"","excerpt":"","ref":"/hugo1/community/","title":"Community"},{"body":"Introduction Table of Contents [TOC]\nFeatures and capabilities Compatibility and support DELL CSI Driver for Kubernetes 1.3.0 DELL CSI Driver for Kubernetes 1.2.0 DELL CSI Driver for Kubernetes 1.1.1 Release archive Known limitations iSCSI CHAP considerations CSI driver 1.2.1 and below CSI driver 1.3.0 and above Kubernetes feature gates Kubernetes 1.13 Kubernetes 1.14 Kubernetes 1.15 Kubernetes 1.19 ","excerpt":"Introduction Table of Contents [TOC]\nFeatures and capabilities Compatibility and support DELL CSI …","ref":"/hugo1/docs/dell-csi-driver/","title":"DELL CSI Driver"},{"body":"  #td-cover-block-0 { background-image: url(/hugo1/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/hugo1/featured-background_hu376e1fbab6ce6c455a2b3aa5c258c0d9_496231_1920x1080_fill_q75_catmullrom_top.jpg); } }  Welcome to Dell Technologies Product documentation! Learn More   Download   \n          New chair metrics! The Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n   Follow us on Twitter! For announcement of latest features etc.\nRead more …\n     This is the second Section      This is another Section     ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/hugo1/","title":"Dell Technologies"},{"body":"CSI-PowerScale Test the deployment workflow of a simple pod on PowerScale storage.\n  Creating a volume:\nCreate a file pvc.yaml using sample yaml files located at test/sample_files/\nExecute the following command to create volume\nkubectl create -f $PWD/pvc.yaml Result: After executing the above command PVC will be created in the default namespace, and the user can see the pvc by executing kubectl get pvc. Note: Verify system for the new volume\n  Attach the volume to Host\nTo attach a volume to a host, create a new application(Pod) and use the PVC created above in the Pod. This scenario is explained using the Nginx application. Create nginx.yaml using sample yaml files located at test/sample_files/.\nExecute the following command to mount the volume to kubernetes node\nkubectl create -f $PWD/nginx.yaml Result: After executing the above command, new nginx pod will be successfully created and started in the default namespace. Note: Verify PowerScale system for host to be part of clients/rootclients field of export created for volume and used by nginx application.\n  Create Snapshot\nThe following procedure will create a snapshot of the volume in the container using VolumeSnapshot objects defined in snap.yaml. The sample file for snapshot creation is located at test/sample_files/\nExecute the following command to create snapshot\nkubectl create -f $PWD/snap.yaml The spec.source section contains the volume that will be snapped in the default namespace. For example, if the volume to be snapped is testvolclaim1, then the created snapshot is named testvolclaim1-snap1. Verify the PowerScale system for new created snapshot.\nNote:\n User can see the snapshots using kubectl get volumesnapshot Notice that this VolumeSnapshot class has a reference to a snapshotClassName:isilon-snapclass. The CSI Driver for PowerScale installation creates this class as its default snapshot class. You can see its definition using kubectl get volumesnapshotclasses isilon-snapclass -o yaml.    Create Volume from Snapshot\nThe following procedure will create a new volume from a given snapshot which is specified in spec dataSource field.\nThe sample file for volume creation from snapshot is located at test/sample_files/\nExecute the following command to create snapshot\nkubectl create -f $PWD/volume_from_snap.yaml Verify the PowerScale system for new created volume from snapshot.\n  Delete Snapshot\nExecute the following command to delete the snapshot\nkubectl get volumesnapshot kubectl delete volumesnapshot testvolclaim1-snap1   To Unattach the volume from Host\nDelete the nginx application to unattach the volume from host\nkubectl delete -f nginx.yaml\n  To delete the volume\nkubectl get pvc kubectl delete pvc testvolclaim1 kubectl get pvc   CSI-Unity Test the deployment workflow of a simple pod on Unity storage.\n  Verify Unity system for Host\nAfter helm deployment CSI Driver for Node will create new Host(s) in the Unity system depending on the number of nodes in kubernetes cluster. Verify Unity system for new Hosts and Initiators\n  Creating a volume:\nCreate a file (pvc.yaml) with the following content.\nNote: Use default FC, iSCSI, NFS storage class or create custom storage classes to create volumes. NFS protocol supports ReadWriteOnce, ReadOnlyMany and ReadWriteMany access modes. FC/iSCSI protocol supports ReadWriteOnce access mode only.\nNote: Additional 1.5 GB is added to the required size of NFS based volume/pvc. This is due to unity array requirement, which consumes this 1.5 GB for storing metadata. This makes minimum PVC size for NFS protocol via driver as 1.5 GB, which is 3 GB when created directly on the array.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: testvolclaim1 spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi storageClassName: unity Execute the following command to create volume\nkubectl create -f $PWD/pvc.yaml Result: After executing the above command, PVC will be created in the default namespace, and the user can see the pvc by executing kubectl get pvc.\nNote: Verify unity system for the new volume\n  Attach the volume to Host\nTo attach a volume to a host, create a new application(Pod) and use the PVC created above in the Pod. This scenario is explained using the Nginx application. Create nginx.yaml with the following content.\napiVersion: v1 kind: Pod metadata: name: nginx-pv-pod spec: containers: - name: task-pv-container image: nginx ports: - containerPort: 80 name: \u0026quot;http-server\u0026quot; volumeMounts: - mountPath: \u0026quot;/usr/share/nginx/html\u0026quot; name: task-pv-storage volumes: - name: task-pv-storage persistentVolumeClaim: claimName: testvolclaim1 Execute the following command to mount the volume to kubernetes node\nkubectl create -f $PWD/nginx.yaml Result: After executing the above command, new nginx pod will be successfully created and started in the default namespace.\nNote: Verify unity system for volume to be attached to the Host where the nginx container is running\n  Create Snapshot The following procedure will create a snapshot of the volume in the container using VolumeSnapshot objects defined in snap.yaml. The following are the contents of snap.yaml.\nsnap.yaml\napiVersion: snapshot.storage.k8s.io/v1beta1 kind: VolumeSnapshot metadata: name: testvolclaim1-snap1 namespace: default spec: volumeSnapshotClassName: unity-snapclass source: persistentVolumeClaimName: testvolclaim1 Execute the following command to create snapshot\nkubectl create -f $PWD/snap.yaml The spec.source section contains the volume that will be snapped in the default namespace. For example, if the volume to be snapped is testvolclaim1, then the created snapshot is named testvolclaim1-snap1. Verify the unity system for new snapshot under the lun section.\nNote:\n User can see the snapshots using kubectl get volumesnapshot Notice that this VolumeSnapshot class has a reference to a snapshotClassName:unity-snapclass. The CSI Driver for Unity installation creates this class as its default snapshot class. You can see its definition using kubectl get volumesnapshotclasses unity-snapclass -o yaml.    Delete Snapshot\nExecute the following command to delete the snapshot\nkubectl get volumesnapshot kubectl delete volumesnapshot testvolclaim1-snap1   To Unattach the volume from Host\nDelete the Nginx application to unattach the volume from host\nkubectl delete -f nginx.yaml\n  To delete the volume\nkubectl get pvc kubectl delete pvc testvolclaim1 kubectl get pvc   Volume Expansion\nTo expand a volume, execute the following command to edit the pvc:\nkubectl edit pvc pvc-name Then, edit the \u0026ldquo;storage\u0026rdquo; field in spec section with required new size:\nspec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi #This field is updated from 5Gi to 10Gi which is required new size Note: Make sure the storage class used to create the pvc have allowVolumeExpansion field set to true. The new size cannot be less than the existing size of pvc.\n  Create Volume Clone\nCreate a file (clonepvc.yaml) with the following content.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: clone-pvc spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi dataSource: kind: PersistentVolumeClaim name: source-pvc storageClassName: unity Execute the following command to create volume clone\nkubectl create -f $PWD/clonepvc.yaml Note: Size of clone pvc must be equal to size of source pvc.\nNote: For NFS protocol, user cannot expand cloned pvc.\nNote: For NFS protocol, deletion of source pvc is not permitted if cloned pvc exists.\n  Create Volume From Snapshot\nCreate a file (pvcfromsnap.yaml) with the following content.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: pvcfromsnap spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi dataSource: kind: VolumeSnapshot name: source-snapshot apiGroup: snapshot.storage.k8s.io storageClassName: unity Execute the following command to create volume clone\nkubectl create -f $PWD/pvcfromsnap.yaml Note: Size of created pvc from snapshot must be equal to size of source snapshot.\nNote: For NFS protocol, pvc created from snapshot can not be expanded.\nNote: For NFS protocol, deletion of source pvc is not permitted if created pvc from snapshot exists.\n  ","excerpt":"CSI-PowerScale Test the deployment workflow of a simple pod on PowerScale storage.\n  Creating a …","ref":"/hugo1/docs/samples/pod-deploy/","title":"Pod Deployment"},{"body":"PowerFlex CSI Product description will be added here\n","excerpt":"PowerFlex CSI Product description will be added here","ref":"/hugo1/docs/product-details/flexos/","title":"PowerFlex CSI"},{"body":"PowerScale CSI Installation Overview Installation in a Kubernetes cluster should be done using the scripts within the dell-csi-helm-installer directory.\nThe controller section of the Helm chart installs the following components in a Stateful Set:\n CSI Driver for PowerScale Kubernetes Provisioner, which provisions the provisioning volumes Kubernetes Attacher, which attaches the volumes to the containers Kubernetes Snapshotter, which provides snapshot support Kubernetes Resizer, which provides resize support  The node section of the Helm chart installs the following component in a Daemon Set:\n CSI Driver for PowerScale Kubernetes Registrar, which handles the driver registration  Prerequisites Before you install CSI Driver for PowerScale, verify the requirements that are mentioned in this topic are installed and configured.\nRequirements  Install Kubernetes. Configure Docker service Install Helm v3 Install volume snapshot components Deploy PowerScale driver using Helm  Note: There is no feature gate that needs to be set explicitly for csi drivers from 1.17 onwards. All the required feature gates are either beta/GA.\nConfigure Docker service The mount propagation in Docker must be configured on all Kubernetes nodes before installing CSI Driver for PowerScale.\nProcedure   Edit the service section of /etc/systemd/system/multi-user.target.wants/docker.service file as follows:\n[Service]\r...\rMountFlags=shared\r  Restart the Docker service with systemctl daemon-reload and\nsystemctl daemon-reload\rsystemctl restart docker\r  Install volume snapshot components Install Snapshot Beta CRDs To install snapshot crds specify --snapshot-crd flag to driver installation script dell-csi-helm-installer/csi-install.sh during driver installation\nInstall Common Snapshot Controller, if not already installed for the cluster ```\rkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml\rkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml\r```\r Install CSI Driver for PowerScale Install CSI Driver for PowerScale using this procedure.\nBefore you begin\n You must clone the source git repository, ready for below procedure. In the dell-csi-helm-installer directory, there should be two shell scripts, csi-install.sh and csi-uninstall.sh. These scripts handle some of the pre and post operations that cannot be performed in the helm chart.  Procedure\n  Collect information from the PowerScale Systems like IP address, username and password. Make a note of the value for these parameters as they must be entered in the secret.yaml and values file.\n  Copy the helm/csi-isilon/values.yaml into a new location with name say my-isilon-settings.yaml, to customize settings for installation.\n  Edit my-isilon-settings.yaml to set the following parameters for your installation:\nThe following table lists the primary configurable parameters of the PowerScale driver helm chart and their default values. More detailed information can be found in the values.yaml file in this repository.\n   Parameter Description Required Default     isiIP \u0026ldquo;isiIP\u0026rdquo; defines the HTTPs endpoint of the PowerScale OneFS API server true -   isiPort \u0026ldquo;isiPort\u0026rdquo; defines the HTTPs port number of the PowerScale OneFS API server false 8080   isiInsecure \u0026ldquo;isiInsecure\u0026rdquo; specifies whether the PowerScale OneFS API server\u0026rsquo;s certificate chain and host name should be verified. false true   isiAccessZone The name of the access zone a volume can be created in false System   volumeNamePrefix \u0026ldquo;volumeNamePrefix\u0026rdquo; defines a string prepended to each volume created by the CSI driver. false k8s   enableDebug Indicates whether debug level logs should be logged false true   verbose Indicates what content of the OneFS REST API message should be logged in debug level logs false 1   enableQuota Indicates whether the provisioner should attempt to set (later unset) quota on a newly provisioned volume. This requires SmartQuotas to be enabled. false true   noProbeOnStart Indicates whether the controller/node should probe during initialization false false   isiPath The default base path for the volumes to be created, this will be used if a storage class does not have the IsiPath parameter specified false    /ifs/data/csi      autoProbe Enable auto probe. false true   nfsV3 Specify whether to set the version to v3 when mounting an NFS export. If the value is \u0026ldquo;false\u0026rdquo;, then the default version supported will be used (i.e. the mount command     will not explicitly specify \u0026ldquo;-o vers=3\u0026rdquo; option) false false    Storage Class parameters Following parameters are related to Storage Class     name \u0026ldquo;storageClass.name\u0026rdquo; defines the name of the storage class to be defined. false isilon   isDefault \u0026ldquo;storageClass.isDefault\u0026rdquo; defines whether the primary storage class should be the default. false true   reclaimPolicy \u0026ldquo;storageClass.reclaimPolicy\u0026rdquo; defines what will happen when a volume is removed from the Kubernetes API. Valid values are \u0026ldquo;Retain\u0026rdquo; and \u0026ldquo;Delete\u0026rdquo;. false Delete   accessZone The Access Zone where the Volume would be created false System   AzServiceIP Access Zone service IP if different from isiIP, specify here and refer in storageClass false    rootClientEnabled When a PVC is being created, it takes the storage class\u0026rsquo; value of \u0026ldquo;storageclass.rootClientEnabled\u0026rdquo; false false    Note: User should provide all boolean values with double quotes. This applicable only for my-isilon-settings.yaml. Ex: \u0026ldquo;true\u0026rdquo;/\u0026ldquo;false\u0026rdquo;\n  Create namespace\nRun kubectl create namespace isilon to create the isilon namespace. Specify the same namespace name while installing the driver. Note: CSI PowerScale also supports installation of driver in custom namespace.\n  Create a secret file for the OneFS credentials by editing the secret.yaml present under helm directory. Replace the values for the username and password parameters.\nUse the following command to convert username/password to base64 encoded string\necho -n 'admin' | base64\recho -n 'password' | base64 Run kubectl create -f secret.yaml to create the secret.\n  Install OneFS CA certificates by following the instructions from next section, if you want to validate OneFS API server\u0026rsquo;s certificates. If not, create an empty secret using the following command and empty secret should be created for the successful CSI Driver for DELL EMC Powerscale installation.\nkubectl create -f emptysecret.yaml\r  Install CSI driver for PowerScale by following the instructions from README\n  Certificate validation for OneFS REST API calls The CSI driver exposes an install parameter \u0026lsquo;isiInsecure\u0026rsquo; which determines if the driver performs client-side verification of the OneFS certificates. The \u0026lsquo;isiInsecure\u0026rsquo; parameter is set to true by default and the driver does not verify the OneFS certificates.\nIf the isiInsecure is set to false, then the secret isilon-certs must contain the CA certificate for OneFS. If this secret is an empty secret, then the validation of the certificate fails, and the driver fails to start.\nIf the isiInsecure parameter is set to false and a previous installation attempt to create the empty secret, then this secret must be deleted and re-created using the CA certs. If the OneFS certificate is self-signed, then perform the following steps:\nProcedure   To fetch the certificate, run openssl s_client -showcerts -connect \u0026lt;OneFS\rIP\u0026gt; \u0026lt;/dev/null 2\u0026gt;/dev/null | openssl x509 -outform PEM \u0026gt; ca_cert.pem\n  To create the secret, run kubectl create secret generic isilon-certs --from-file=ca_cert.pem -n isilon\n  ","excerpt":"PowerScale CSI Installation Overview Installation in a Kubernetes cluster should be done using the …","ref":"/hugo1/docs/getting-started/driver/isilon/","title":"PowerScale CSI"},{"body":"PowerScale CSI Product description will be added here\n","excerpt":"PowerScale CSI Product description will be added here","ref":"/hugo1/docs/product-details/isilon/","title":"PowerScale CSI"},{"body":"PowerStore CSI Product description will be added here\n","excerpt":"PowerStore CSI Product description will be added here","ref":"/hugo1/docs/product-details/powerstore/","title":"PowerStore CSI"},{"body":"","excerpt":"","ref":"/hugo1/search/","title":"Search Results"},{"body":"Unity CSI Test deploying a simple pod with Unity storage Test the deployment workflow of a simple pod on Unity storage.\n  Verify Unity system for Host\nAfter helm deployment CSI Driver for Node will create new Host(s) in the Unity system depending on the number of nodes in kubernetes cluster. Verify Unity system for new Hosts and Initiators\n  Creating a volume:\nCreate a file (pvc.yaml) with the following content.\nNote: Use default FC, iSCSI, NFS storage class or create custom storage classes to create volumes. NFS protocol supports ReadWriteOnce, ReadOnlyMany and ReadWriteMany access modes. FC/iSCSI protocol supports ReadWriteOnce access mode only.\nNote: Additional 1.5 GB is added to the required size of NFS based volume/pvc. This is due to unity array requirement, which consumes this 1.5 GB for storing metadata. This makes minimum PVC size for NFS protocol via driver as 1.5 GB, which is 3 GB when created directly on the array.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: testvolclaim1 spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi storageClassName: unity Execute the following command to create volume\nkubectl create -f $PWD/pvc.yaml Result: After executing the above command, PVC will be created in the default namespace, and the user can see the pvc by executing kubectl get pvc.\nNote: Verify unity system for the new volume\n  Attach the volume to Host\nTo attach a volume to a host, create a new application(Pod) and use the PVC created above in the Pod. This scenario is explained using the Nginx application. Create nginx.yaml with the following content.\napiVersion: v1 kind: Pod metadata: name: nginx-pv-pod spec: containers: - name: task-pv-container image: nginx ports: - containerPort: 80 name: \u0026quot;http-server\u0026quot; volumeMounts: - mountPath: \u0026quot;/usr/share/nginx/html\u0026quot; name: task-pv-storage volumes: - name: task-pv-storage persistentVolumeClaim: claimName: testvolclaim1 Execute the following command to mount the volume to kubernetes node\nkubectl create -f $PWD/nginx.yaml Result: After executing the above command, new nginx pod will be successfully created and started in the default namespace.\nNote: Verify unity system for volume to be attached to the Host where the nginx container is running\n  Create Snapshot The following procedure will create a snapshot of the volume in the container using VolumeSnapshot objects defined in snap.yaml. The following are the contents of snap.yaml.\nsnap.yaml\napiVersion: snapshot.storage.k8s.io/v1beta1 kind: VolumeSnapshot metadata: name: testvolclaim1-snap1 namespace: default spec: volumeSnapshotClassName: unity-snapclass source: persistentVolumeClaimName: testvolclaim1 Execute the following command to create snapshot\nkubectl create -f $PWD/snap.yaml The spec.source section contains the volume that will be snapped in the default namespace. For example, if the volume to be snapped is testvolclaim1, then the created snapshot is named testvolclaim1-snap1. Verify the unity system for new snapshot under the lun section.\nNote:\n User can see the snapshots using kubectl get volumesnapshot Notice that this VolumeSnapshot class has a reference to a snapshotClassName:unity-snapclass. The CSI Driver for Unity installation creates this class as its default snapshot class. You can see its definition using kubectl get volumesnapshotclasses unity-snapclass -o yaml.    Delete Snapshot\nExecute the following command to delete the snapshot\nkubectl get volumesnapshot kubectl delete volumesnapshot testvolclaim1-snap1   To Unattach the volume from Host\nDelete the Nginx application to unattach the volume from host\nkubectl delete -f nginx.yaml\n  To delete the volume\nkubectl get pvc kubectl delete pvc testvolclaim1 kubectl get pvc   Volume Expansion\nTo expand a volume, execute the following command to edit the pvc:\nkubectl edit pvc pvc-name Then, edit the \u0026ldquo;storage\u0026rdquo; field in spec section with required new size:\nspec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi #This field is updated from 5Gi to 10Gi which is required new size Note: Make sure the storage class used to create the pvc have allowVolumeExpansion field set to true. The new size cannot be less than the existing size of pvc.\n  Create Volume Clone\nCreate a file (clonepvc.yaml) with the following content.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: clone-pvc spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi dataSource: kind: PersistentVolumeClaim name: source-pvc storageClassName: unity Execute the following command to create volume clone\nkubectl create -f $PWD/clonepvc.yaml Note: Size of clone pvc must be equal to size of source pvc.\nNote: For NFS protocol, user cannot expand cloned pvc.\nNote: For NFS protocol, deletion of source pvc is not permitted if cloned pvc exists.\n  Create Volume From Snapshot\nCreate a file (pvcfromsnap.yaml) with the following content.\napiVersion: v1 kind: PersistentVolumeClaim metadata: name: pvcfromsnap spec: accessModes: - ReadWriteOnce resources: requests: storage: 5Gi dataSource: kind: VolumeSnapshot name: source-snapshot apiGroup: snapshot.storage.k8s.io storageClassName: unity Execute the following command to create volume clone\nkubectl create -f $PWD/pvcfromsnap.yaml Note: Size of created pvc from snapshot must be equal to size of source snapshot.\nNote: For NFS protocol, pvc created from snapshot can not be expanded.\nNote: For NFS protocol, deletion of source pvc is not permitted if created pvc from snapshot exists.\n  ","excerpt":"Unity CSI Test deploying a simple pod with Unity storage Test the deployment workflow of a simple …","ref":"/hugo1/docs/getting-started/driver/unity/","title":"Unity CSI"},{"body":"Unity CSI Product description will be added here\n","excerpt":"Unity CSI Product description will be added here","ref":"/hugo1/docs/product-details/unity/","title":"Unity CSI"}]